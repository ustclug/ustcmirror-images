diff --git a/bin/common b/bin/common
index e454fd4..41b4071 100644
--- a/bin/common
+++ b/bin/common
@@ -206,7 +206,6 @@ log () {
 error () {
     log "$@"
     LOG_ERROR=1
-    mailf -s "[$PROGRAM@$(hostname -s)] ERROR: $*" -b "$*" ${MAILTO}
 }
 
 # log the message using log() but then also send a mail
@@ -216,7 +215,6 @@ error_mailf () {
     shift
     log "$m"
     LOG_ERROR=1
-    mailf -s "[$PROGRAM@$(hostname -s)] ERROR: $m" "$@" ${MAILTO}
 }
 
 # run a hook
@@ -271,7 +269,7 @@ savelog() {
 # Return rsync version
 rsync_protocol() {
     RSYNC_VERSION="$(${RSYNC} --version)"
-    RSYNC_REGEX="(protocol[ ]+version[ ]+([0-9]+))"    
+    RSYNC_REGEX="(protocol[ ]+version[ ]+([0-9]+))"
     if [[ ${RSYNC_VERSION} =~ ${RSYNC_REGEX} ]]; then
         echo ${BASH_REMATCH[2]}
     fi
@@ -331,62 +329,3 @@ join_by() {
     shift
     echo $*
 }
-
-# Sends mail
-# mailf [-a attachment] [-b body] [-s subject] to-addr ...
-mailf() {
-    local boundary="==--$RANDOM--$RANDOM--$RANDOM--=="
-    local attachment=()
-    local body=()
-    local subject=
-
-    OPTIND=1
-    while getopts ":a:b:s:" arg; do
-        case $arg in
-            a)
-                attachment+=("$OPTARG")
-                ;;
-            b)
-                body+=("$OPTARG")
-                ;;
-            s)
-                subject="$OPTARG"
-                ;;
-        esac
-    done
-    shift $((OPTIND-1))
-
-    (
-        cat <<EOF
-Subject: ${subject}
-To: $(join_by ', ' "$@")
-Auto-Submitted: auto-generated
-MIME-Version: 1.0
-Content-Type: multipart/mixed; boundary=${boundary}
-
-EOF
-        if [[ ${body[@]:-} ]]; then
-            for a in "${body[@]}"; do
-                cat <<EOF
---${boundary}
-Content-type: text/plain
-
-EOF
-                echo "$a"
-            done
-        fi
-        if [[ ${attachment[@]:-} ]]; then
-            for a in "${attachment[@]}"; do
-                cat <<EOF
---${boundary}
-Content-type: text/plain; name="$(basename $a)"
-
-EOF
-                cat "$a" || echo "Failed to attach $a"
-            done
-        fi
-        cat <<EOF
---${boundary}--
-EOF
-    ) | /usr/sbin/sendmail -i -- "$@" || :
-}
diff --git a/bin/ftpsync b/bin/ftpsync
index 12d4871..976ba2e 100755
--- a/bin/ftpsync
+++ b/bin/ftpsync
@@ -1,6 +1,8 @@
 #! /bin/bash
 # No, we can not deal with sh alone.
 
+[[ $DEBUG = true ]] && set -x
+
 set -e
 set -u
 # ERR traps should be inherited from functions too. (And command
@@ -33,7 +35,16 @@ set -o pipefail
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 
-BINDIR=$(dirname $(readlink -f "$0")); . "${BINDIR}/include-git" ## INCLUDE COMMON
+BINDIR=$(dirname $(readlink -f "$0"))
+
+BASEDIR=${BASEDIR:-"$(readlink -f $(dirname "$0")/..)"}
+CONFDIRS=("${BASEDIR}/etc" ~/.config/ftpsync /etc/ftpsync)
+LOCKDIR="${BASEDIR}/locks"
+LOGDIR="${LOGDIR:-${BASEDIR}/log}"
+
+VERSION="g5bf559a" # "g$(cd $BINDIR && git rev-parse --short HEAD 2>/dev/null || echo "unknown")"
+
+. "${BINDIR}/common"
 
 ########################################################################
 ########################################################################
@@ -100,42 +111,8 @@ cleanup() {
     # all done. Mail the log, exit.
     log "Mirrorsync done";
 
-    if [[ -n ${MAILTO} ]]; then
-	local archive="(empty)"
-        if [[ $ARCHIVE ]]; then
-            archive=$ARCHIVE
-        fi
-
-        local args=()
-        local send=
-        local subject="SUCCESS: archive ${archive}"
-        local rsync_error="${LOGDIR}/rsync-${NAME}.error"
-        local rsync_log="${LOGDIR}/rsync-${NAME}.log"
-
-        # In case rsync had something on stderr
-        if [[ -s $rsync_error ]]; then
-            args+=(-a $rsync_error -a $LOG)
-            subject="ERROR: archive ${archive}: rsync errors"
-            send=1
-        # In case admin want all logs or we had logged any error
-        elif [[ ${ERRORSONLY} = false ]] || [[ ${LOG_ERROR:-} ]]; then
-            args+=(-a $LOG)
-            subject="ERROR: archive ${archive}: errors"
-            send=1
-        fi
-        # Someone wants full logs including rsync
-        if [[ ${FULLLOGS} = true ]]; then
-            args+=(-a $rsync_log)
-            send=1
-        fi
-        if [[ $send ]]; then
-            mailf "${args[@]}" -s "[${PROGRAM}@$(hostname -s)] ${subject}" ${MAILTO}
-        fi
-    fi
-
     savelog "${LOGDIR}/rsync-${NAME}.log"
     savelog "${LOGDIR}/rsync-${NAME}.error"
-    savelog "$LOG" > /dev/null
 
     rm -f "${LOCK}"
 
@@ -221,7 +198,7 @@ tracefile() {
         fi
 
         if [[ -d ${TO}/dists ]]; then
-            ARCH=$(find ${TO}/dists \( -name 'Packages.*' -o -name 'Sources.*' \) -printf '%h\n' 2>/dev/null |
+            ARCH=$(find ${TO}/dists \( -name 'Packages.*' -o -name 'Sources.*' \) -exec dirname {} \; 2>/dev/null |
                 sed -Ene 's#.*/binary-([^/]+)$#\1#p; s#.*/(source)$#\1#p' | sort -u | tr '\n' ' ')
             if [[ $ARCH ]]; then
                 echo "Architectures: ${ARCH}"
@@ -264,7 +241,7 @@ tracefile() {
     mv "${TO}/${TRACEHIERARCHY}".new "${TO}/${TRACEHIERARCHY}"
     cp "${TO}/${TRACEHIERARCHY}" "${TO}/${TRACEHIERARCHY}.mirror"
 
-    (cd "${TO}/${TRACEDIR}" && ls -1rt $(find . -type f \! -name "_*" -printf "%f\n")) > "${TO}/${TRACELIST}"
+    (cd "${TO}/${TRACEDIR}" && ls -1rt $(find . -type f \! -name "_*" -exec basename {} \;)) > "${TO}/${TRACELIST}"
 }
 
 arch_imexclude() {
@@ -390,7 +367,6 @@ create_logdir
 ########################################################################
 MIRRORNAME=${MIRRORNAME:-$(hostname -f)}
 TO=${TO:-"/srv/mirrors/debian/"}
-MAILTO=${MAILTO:-${LOGNAME:?Environment variable LOGNAME unset, please check your system or specify MAILTO}}
 HUB=${HUB:-"false"}
 
 # Connection options
@@ -561,10 +537,10 @@ if ! ( set -o noclobber; echo "$$" > "${LOCK}") 2> /dev/null; then
 fi
 
 # We want to cleanup always
-trap cleanup EXIT TERM HUP INT QUIT
+trap cleanup EXIT
 
 # Start log by redirecting stdout and stderr there and closing stdin
-exec >"$LOG" 2>&1 <&-
+exec 2>&1 <&-
 log "Mirrorsync start"
 
 # Look who pushed us and note that in the log.
@@ -735,39 +711,3 @@ fi
 
 # Remove the Archive-Update-in-Progress file before we push our downstreams.
 rm -f "${LOCK}"
-
-declare -f -F send_mail_new_version > /dev/null && send_mail_new_version || :
-
-if [[ ${HUB} = true ]]; then
-    # Trigger slave mirrors if we had a push for stage2 or all, or if its mhop
-    if [[ true = ${SYNCSTAGE2} ]] || [[ true = ${SYNCALL} ]] || [[ true = ${SYNCMHOP} ]]; then
-        RUNMIRRORARGS=""
-        if [[ -n ${ARCHIVE} ]]; then
-            # We tell runmirrors about the archive we are running on.
-            RUNMIRRORARGS="-a ${ARCHIVE}"
-        fi
-        # We also tell runmirrors that we are running it from within ftpsync, so it can change
-        # the way it works with mhop based on that.
-        RUNMIRRORARGS="${RUNMIRRORARGS} -f"
-
-        if [[ true = ${SYNCSTAGE1} ]]; then
-            # This is true when we have a mhop sync. A normal multi-stage push sending stage1 will
-            # not get to this point.
-            # So if that happens, tell runmirrors we are doing mhop
-            RUNMIRRORARGS="${RUNMIRRORARGS} -k mhop"
-        elif [[ true = ${SYNCSTAGE2} ]]; then
-            RUNMIRRORARGS="${RUNMIRRORARGS} -k stage2"
-        elif [[ true = ${SYNCALL} ]]; then
-            RUNMIRRORARGS="${RUNMIRRORARGS} -k all"
-        fi
-        log "Trigger slave mirrors using ${RUNMIRRORARGS}"
-        ${BINDIR:+${BINDIR}/}runmirrors ${RUNMIRRORARGS}
-        log "Trigger slave done"
-
-        HOOK=(
-            HOOKNR=5
-            HOOKSCR=${HOOK5}
-        )
-        hook $HOOK
-    fi
-fi
